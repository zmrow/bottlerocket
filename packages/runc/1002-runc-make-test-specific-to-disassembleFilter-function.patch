From 08b5279797d947f1507d3e04a7af0f37e6c1cec5 Mon Sep 17 00:00:00 2001
From: Kieron Browne <kbrowne@vmware.com>
Date: Thu, 25 Mar 2021 14:03:00 +0000
Subject: [PATCH] Make test specific to disassembleFilter function

TestPatchHugeSeccompFilterDoesNotBlock is only testing the
disassembleFilter function. There is no need to invoke PatchAndLoad
which has the side effect of loading a seccomp profile.

Co-authored-by: Danail Branekov <danailster@gmail.com>
Co-authored-by: Kieron Browne <kbrowne@vmware.com>
Signed-off-by: Kieron Browne <kbrowne@vmware.com>
Signed-off-by: Danail Branekov <danailster@gmail.com>
---
 libcontainer/seccomp/patchbpf/enosys_linux_test.go | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/libcontainer/seccomp/patchbpf/enosys_linux_test.go b/libcontainer/seccomp/patchbpf/enosys_linux_test.go
index 5c79a56ba0..ee26a6a610 100644
--- a/libcontainer/seccomp/patchbpf/enosys_linux_test.go
+++ b/libcontainer/seccomp/patchbpf/enosys_linux_test.go
@@ -282,7 +282,7 @@ func TestEnosysStub_MultiArch(t *testing.T) {
 	}
 }
 
-func TestPatchHugeSeccompFilterDoesNotBlock(t *testing.T) {
+func TestDisassembleHugeFilterDoesNotHang(t *testing.T) {
 	hugeFilter, err := libseccomp.NewFilter(libseccomp.ActAllow)
 	if err != nil {
 		t.Fatalf("failed to create seccomp filter: %v", err)
@@ -294,8 +294,10 @@ func TestPatchHugeSeccompFilterDoesNotBlock(t *testing.T) {
 		}
 	}
 
-	config := fakeConfig(configs.Kill, []string{}, []string{"amd64"})
-	PatchAndLoad(config, hugeFilter)
+	_, err = disassembleFilter(hugeFilter)
+	if err != nil {
+		t.Fatalf("failed to disassembleFilter: %v", err)
+	}
 
-	// if we exit, we did not block
+	// if we exit, we did not hang
 }
